#!/usr/bin/env python
import sys
from threading import Lock
import rospy
from std_msgs.msg import String

def msg_cb(msg):
	global msg_times, time_window
	with queue_lock:
		msg_times.append(rospy.Time.now())


# number of seconds of window to use for estimating message rate
time_window = 1.0

queue_lock = Lock()
msg_times = []

rospy.init_node('sub', anonymous=True)
sub = rospy.Subscriber('foo', String, msg_cb)

r = rospy.Rate(1.0)
while not rospy.is_shutdown():
	with queue_lock:
		# clear out old messages
		now = rospy.Time.now()
		msg_times = [t for t in msg_times if (now - t).to_sec() < time_window]

		msg_rate = 0.0
		if len(msg_times) >= 2:
			msg_rate = (len(msg_times) - 1) / (msg_times[-1] - msg_times[0]).to_sec()
	print msg_rate
	r.sleep()


